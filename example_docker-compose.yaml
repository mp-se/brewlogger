version: "3.8"

services:
  brew_web:
    build: service-web
    container_name: web
    restart: always
    ports:
      - 8000:8080
    networks:
      - brewnet
    depends_on:
      - brew_api

  brew_api:
    build: service-api
    container_name: api
    restart: always
    networks:
      - brewnet
    environment:
     - API_KEY=akljnv13bvi2vfo0b0bw789jlljsdf
     - DATABASE_URL=postgresql://postgres:password@brew_db:5432/app
     - API_KEY_ENABLED=1
     - TEST_ENDPOINTS_ENABLED=1
     - BREWFATHER_API_KEY=
     - BREWFATHER_USER_KEY=
    depends_on:
      - brew_db

  brew_db:
    image: postgres:14
    restart: always
    networks:
      - brewnet
    volumes:
      - pg-data:/var/lib/postgresql/data/pgdata
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_SERVER=brew_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=app

  brew_pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - 5050:80
    networks:
      - brewnet
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - brew_db

  mdns_repeater:
    build: service-mdns
    container_name: mdns
    restart: always
    network_mode: "host"
    privileged: true
    environment:
      USE_MDNS_REPEATER: 1
      EXTERNAL_INTERFACE: eth0
      DOCKER_NETWORK_NAME: brewnet
      OPTIONS: ""
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  brew_ble:
    build: service-ble
    container_name: ble
    restart: always
    privileged: true
    networks:
      - brewnet
    environment:
      MIN_INTERVAL: 300
    volumes:
      - /dev:/dev
      - /var/run/dbus:/var/run/dbus

volumes:
  pg-data:
  pgadmin-data:

networks:
  brewnet:
    name: brewnet
